<template>
	<div class="content">
		<!-- 标题栏 -->
		<div class="page-header">
			<!-- 状态栏占位 -->
			<div :style="{ height: statusBarHeight }"></div>
			<div class="page-header-wrapper">
				<div class="page-header-left" @click="navback">
					<text class="flicon xiaoxi">&#xe653;</text>
				</div>
				<image class="jdtitle" src="/static/index/jd_t.png" mode="widthFix"></image>
				<div class="page-header-right" @click="toSearch">
					<text class="flicon xiaoxi">&#xe678;</text>
				</div>
			</div>
		</div>

		<!-- 顶部选项卡 -->
		<tabs @change="changeTab" :index="tabIndex">
			<tab-bar class="tui-white">
				<div v-for="(tabBar,index) in tabBars" :key="index" class="tab-bar-item" :ref="tabBar.val+index">
					<text class="tab-bar-title" :class="[tabIndex==index ? 'tui-active' : '']">{{tabBar.desc}}</text>
				</div>
			</tab-bar>
			<tab-content>
				<div  class="slider-item" v-for="(tab,index1) in tabBars" :key="index1" >
					<seizeSeat type='empty' v-if="tab.orderList.length==0"></seizeSeat>
					<list class="tui-list" @loadmore="loadMore(index1)" :ref="'tab'+index1" loadmoreoffset="5" @scroll="recylerScroll">

						<!-- 刷新组件 -->
						<refresh class="tui-refresh" @refresh="onrefresh" @pullingdown="onpullingdown" :display="tab.refreshing? 'show' : 'hide'">
							<loading-indicator class="tui-loading"></loading-indicator>
							<text :class="[iosRefresh?'ios-arrow':'']" v-if="isIos">{{arrow}}</text>
							<text class="refresh-text">{{tab.refreshText}}</text>
						</refresh>

						<cell>
							<div :ref="'totop'+index1"></div>
						</cell>
						<cell v-for="(item,index) in  tab.orderList" :key="index">
							<!-- 商品列表组件-->
							<!-- 商品列表 -->
							<div class="shop-list" @click="navToDetail(item.goods_id)">
								<!-- 图片 -->
								<div class="shop-pictrue">
									<image class="big-pict" mode="widthFix" :src="item.picurl"></image>
								</div>
								<!-- 右侧内容 -->
								<div class="shop-content">
									<!-- 标题 -->
									<div class="shop-title">
										<image class="shop-icn" src="/static/index/jd-icon.png" mode="aspectFit"></image>
										<text class="til">{{item.goods_short_name}}</text>
									</div>

									<!-- 赚 -->
									<div class="earn">
										<text v-if="userlevel.on_off" class="primary">奖: {{((item.commission)*userlevel.level_percent).toFixed(2)}}</text>
									</div>

									<!-- 价格 -->
									<div class="shop-price">
										<text class="ago-price">原价:￥{{item.price}}</text>
									</div>

									<!-- 券 -->
									<div class="progress-box">
										<div class="box-left">
											<text class="price-icon">￥</text>
											<text class="now-price">{{item.price_after}}</text>
										</div>
										<div class="quan">
											<image src="/static/index/quanzi.png" mode="" class="quan-img">
											</image>
											<text class="quan-price"> ￥{{item.discount}}</text>
										</div>
									</div>
								</div>
							</div>
						</cell>

						<!-- 加载组件 -->
						<cell class="tui-loadmore">
							<text class="loadmore-line" v-if="!tab.loadingType"></text>
							<text class="loadmore-text tui-gray">{{tab.loadingText}}</text>
						</cell>
					</list>
					<div class="fixedItem" @click="scrollToTop" v-if="tab.topShow">
						<text class="flicon">&#xe6fe;</text>
					</div>
				</div>
			</tab-content>
		</tabs>
	</div>
</template>

<script>
	import seizeSeat from '@/components/seize-seat.nvue'
	import tabContent from '@/components/tabNvue/tabContent.nvue'
	import tabBar from '@/components/tabNvue/tabBar.nvue'
	import tabs from '@/components/tabNvue/tabs.nvue'
	import mediaList from '@/components/tabNvue/mediaList.nvue'

	const dom = weex.requireModule('dom')

	export default {
		components: {
			tabContent,
			tabBar,
			tabs,
			mediaList,
			seizeSeat
		},
		data() {
			return {
				statusBarHeight: '0wx', //状态栏占位高度		
				arrow: "",
				iosRefresh: false,
				refreshText: "下拉可以刷新",
				tabIndex: 0, //当前的tab栏的索引
				tabBars: [{
						val: 1,
						desc: "精选",
						orderList: [],
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						loaded: false,
						pageNo: 1,
						refreshing: false,
						refreshText: "",
						isquest: true,
					},
					{
						val: 13,
						desc: "数码",
						orderList: [],
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						loaded: false,
						pageNo: 1,
						refreshing: false,
						refreshText: "",
						isquest: true,
					},
					{
						val: 14,
						desc: "家电",
						orderList: [],
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						loaded: false,
						pageNo: 1,
						refreshing: false,
						refreshText: "",
						isquest: true,
					},
					{
						val: 7,
						desc: "居家",
						orderList: [],
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						loaded: false,
						pageNo: 1,
						refreshing: false,
						refreshText: "",
						isquest: true,
					},
					{
						val: 12,
						desc: "生活",
						orderList: [],
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						loaded: false,
						pageNo: 1,
						refreshing: false,
						refreshText: "",
						isquest: true,
					},
					{
						val: 4,
						desc: "服装",
						orderList: [],
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						loaded: false,
						pageNo: 1,
						refreshing: false,
						refreshText: "",
						isquest: true,
					},
					{
						val: 11,
						desc: "潮流",
						orderList: [],
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						loaded: false,
						pageNo: 1,
						refreshing: false,
						refreshText: "",
						isquest: true,
					}
				],
				pageSize: 12,
				hotShop: [], //热卖商品
				userlevel: {} //用户等级信息
			}
		},

		//进入页面请求数据
		created() {
			this.userlevel = uni.getStorageSync("lzd-level")
			console.log(this.userlevel)
			var pages = getCurrentPages();
			var page = pages[pages.length - 1];
			var currentWebview = page.$getAppWebview();
			var _that = this;
			currentWebview.addEventListener('show', function(e) {
				_that.userlevel = uni.getStorageSync("lzd-level")
				console.log("监听")
			});
			//获取状态栏高度给顶部占位节点
			uni.getSystemInfo({
				success: res => {
					this.statusBarHeight = res.statusBarHeight + 'wx';
				}
			})


			this.loadData();
		},

		methods: {
			recylerScroll: function(e) {
				console.log(1)
				if (e.contentOffset.y < -200) {
					this.$set(this.tabBars[this.tabIndex], 'topShow', true)
				} else {
					this.$set(this.tabBars[this.tabIndex], 'topShow', false)
				}
			},
			scrollToTop: function() {
				const el = this.$refs['totop'+this.tabIndex][0]
				console.log(el)
				dom.scrollToElement(el, {
					offset: -126
				})
			},
			//修改已售的显示
			yishou(data) {
				if (data >= 10000) {
					return (data / 10000).toFixed(1) + '万'
				} else {
					return data
				}
			},

			//解决js加减不精确问题
			accSubtr(arg1, arg2) {
				var r1, r2, m, n;
				try {
					r1 = arg1.toString().split(".")[1].length
				} catch (e) {
					r1 = 0
				}
				try {
					r2 = arg2.toString().split(".")[1].length
				} catch (e) {
					r2 = 0
				}
				m = Math.pow(10, Math.max(r1, r2));
				//动态控制精度长度
				n = (r1 >= r2) ? r1 : r2;
				return ((arg1 * m - arg2 * m) / m).toFixed(n);
			},
			navback() {
				uni.navigateBack({
					delta: 1
				})
			},
			//跳转搜索页面
			toSearch() {
				uni.navigateTo({
					url: '/pages/index/HM-search?type=jd',
					success: res => {},
					fail: () => {},
					complete: () => {}
				});
			},

			//加载数据
			loadData(source) {
				//获取当前轮播图得索引
				let index = this.tabIndex;
				//获取当前轮播面板对象
				let navItem = this.tabBars[index];

				//如果上一次请求失败,请求数据加 1；
				console.log(this.pageSize)
				if (!navItem.isquest) {
					this.pageSize++;
					console.log(this.pageSize)
				}
				//如果是刷新则重置初始值
				if (source == "refresh") {
					navItem.loadingType = true;
					navItem.loaded = false;
					navItem.pageNo = 1;
				}
				//检测没有数据
				if (!navItem.loadingType) {
					return;
				}
				//检测是否是第一次加载，防止重复加载数据
				if (source == "tabChange" && navItem.loaded == true) {
					return
				}
				console.log(1)
				uni.request({
					url: 'http://39.100.111.131:8080/jingfen',
					data: {
						eliteId: navItem.val,
						pageSize: this.pageSize,
						pageIndex: navItem.pageNo,
						sort: "desc",
						sortName: ''
					},

					success: res => {
						console.log(
							navItem.val, navItem.pageNo, this.pageSize
						)
						let {
							status_code,
							data
						} = res.data;
						// console.log(res)
						//如果上一次请求失败,请求数据加 1；
						if (!navItem.isquest) {
							navItem.isquest = true;
							this.pageSize--;
							console.log(this.pageSize)
						}

						//请求成功对应序号加一
						navItem.pageNo++;
						//结束下拉
						if (source == "refresh") {
							navItem.orderList = [];
						}
						//请求成功
						if (status_code == 200) {
							let shopList = data.data;
							// 添加新增数据		
							navItem.orderList = navItem.orderList.concat(shopList);
							//请求成功序号增加,并且修改对应得加载状态
							navItem.loaded = true;

							//判断是否还有数据
							navItem.loadingType = shopList.length == this.pageSize ? true : false;
						} else {
							navItem.loadingType = false;
						}
					},
					fail: () => {
						//请求失败，加入false标志
						navItem.isquest = false;
						//请求失败的情况下更改请求的次数
						navItem.loadingText = '没有更多了';
					},
					complete: () => {
						navItem.refreshing = false;
					}
				})
			},

			//商品详情页面
			navToDetail(id) {
				uni.navigateTo({
					url: "/pages/index/shopdetails-j?id=" + id
				})
			},

			//上拉加载更多
			loadMore(e) {
				console.log("触发")

				//获取当前类目的刷新状态
				var currentTab = this.tabBars[this.tabIndex];
				if (!currentTab.loadingType) {
					currentTab.loadingText = '没有更多了';
					return
				}
				currentTab.loadingText = "正在加载...";
				this.loadData();
			},
			async changeTab(e) {
				this.tabIndex = e.index;
				//如果是第一页的话就请求数据
				if (this.tabBars[this.tabIndex].pageNo === 1) {
					this.loadData();

				}
			},

			//手指离开，下拉刷新触发修改状态
			onrefresh(event) {
				//获取当前类目的刷新状态
				var currentTab = this.tabBars[this.tabIndex];
				this.iosRefresh = false;
				currentTab.arrow = "↑";
				currentTab.refreshText = "正在刷新...";
				currentTab.refreshing = true;
				this.loadData("refresh");

			},

			//手指接触屏幕开始，下拉触发
			onpullingdown(event) {
				//获取当前类目的刷新状态
				var currentTab = this.tabBars[this.tabIndex];

				//如果为刷新中则不准再次触发刷新
				if (currentTab.refreshing) {
					return;
				}
				this.iosRefresh = this.isIos

				if (Math.abs(event.pullingDistance) > Math.abs(event.viewHeight)) {
					this.arrow = "↑";
					currentTab.refreshText = "释放立即刷新";
				} else {
					this.arrow = "↓";
					currentTab.refreshText = "下拉可以刷新";
				}
			}
		}
	}
</script>

<style>
	.flicon{
		font-family: flicon;
		font-size: 36upx;
		color: #e74b45;
	}
	.slider-item {
		position: absolute;
		top: 0;
		bottom: 0;
		width: 750upx;
	}
	.fixedItem {
		width: 66rpx;
		height: 66rpx;
		background-color: #FFFFFF;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
		position: absolute;
		bottom: 30upx;
		right: 30upx;
		z-index: 999999;
		box-shadow: 0 0 20px #ccc;
	}
	.today-hot {
		background-color: #FFFFFF;
		margin: 10upx 0;
	}

	.today-hot-title {
		flex-direction: row;
		align-items: center;
		padding: 10upx 20upx 0;
	}

	/* 今日热卖 */
	.scroller {
		width: 750upx;
		flex-direction: row;
		padding: 20upx;
	}

	.hot-shop-item {
		width: 230upx;
		margin: 0 10upx;
		/* padding: 20upx; */
	}

	.hot-shop-pict {
		width: 230upx;
		height: 230upx;
		border-radius: 10upx;
		margin-bottom: 10upx;
	}

	.hot-shop-title {
		text-overflow: ellipsis;
		lines: 1;
		font-size: 24upx;
		color: #464646;
	}

	.hot-shop-price {
		align-items: center;
		flex-direction: row;
		position: relative;
		margin: 10upx 0;
		justify-content: space-between;
	}

	.hot-shop-price-num {
		color: #f51515;
	}

	.hot-quan {
		flex-direction: row;
		height: 25upx;
		align-items: center;
		font-size: 20upx;

		position: relative;
		margin-right: 40upx;
	}

	.hot-quan-img {
		position: absolute;
		left: -1upx;
		width: 24upx;
		height: 24upx;
	}

	.hot-quan-price {
		font-size: 20upx;
		margin-left: 20upx;
		padding: 0 4upx;
		color: #FFFFFF;
		border-radius: 4upx;
		background-color: #fd3e14;
	}

	.hot-sold {
		flex-direction: row;
	}

	.hot-sold-num {
		font-size: 20upx;
		color: #848484;
		;
	}


	/* 好券 */
	.flicon {
		font-family: flicon;
		font-size: 36upx;
		color: #e74b45;
	}

	.content {
		background-color: #f8f8f8;
	}

	.bug {
		height: 1upx;
		width: 750upx;
	}

	/* 商品列表 */
	.shop-list {
		width: 710upx;
		margin: 0upx 20upx 20upx;
		height: 250upx;
		background-color: #fff;
		border-radius: 10upx;
		flex-direction: row;
	}

	.shop-pictrue {
		width: 250upx;
		margin-right: 10upx;
	}

	.big-pict {
		width: 250upx;
		height: 250upx;
		border-radius: 10upx;
		overflow: hidden;
	}

	.shop-content {
		padding: 10upx;
		flex: 1;
		position: relative;
	}

	.shop-title {
		flex-direction: row;
	}

	.shop-icn {
		margin-right: 10upx;
		width: 30upx;
		height: 30upx;
	}

	.til {
		flex: 1;
		font-size: 28upx;
		/* overflow: hidden; */
		text-overflow: ellipsis;
		lines: 1;
	}

	.earn {
		margin-top: 18upx;
		flex-direction: row;
	}

	.primary {
		border-color: #ea3424;
		border-style: solid;
		border-width: 1upx;
		font-size: 24upx;
		color: #ea3424;
		margin: 10upx 0;
		padding: 4upx 10upx;
		border-radius: 6upx;
		background-color: #fdf6f2;
	}

	.middle {
		background-color: #fcf0f0;
		font-size: 24upx;
		color: #ed7236;
		margin: 10upx;
		padding: 4upx 10upx;
		border-radius: 6upx;
	}

	.shop-price {
		align-items: flex-end;
		flex-direction: row;
		position: relative;
		margin-top: 15upx;
		justify-content: space-between;
	}



	.now-price {
		/* font-weight: bold; */
		font-size: 50upx;
		padding-right: 10upx;
		color: #fb6b73;
	}

	.ago-price {
		text-decoration: line-through;
		/* position: absolute;
		left: 160upx; */
		color: #969696;
		font-size: 24upx;
	}

	.progress-box {
		margin-top: 15upx;
		align-items: center;
		position: relative;
		color: #969696;
		flex-direction: row;
		justify-content: space-between;
		margin-bottom: 10upx;
	}

	.box-left {
		flex-direction: row;
		align-items: flex-end;
	}

	.price-icon {
		font-size: 30upx;
		color: #fb6b73;
		padding-bottom: 6upx;
	}

	.quan {
		flex-direction: row;
		height: 31upx;
		align-items: center;
		font-size: 20upx;
		border-style: solid;
		border-color: #f51515;
		border-width: 1upx;
		position: relative;
		margin-right: 40upx;
	}

	.quan-img {
		position: absolute;
		left: -1upx;
		width: 30upx;
		height: 30upx;
	}

	.quan-price {
		font-size: 26upx;
		margin-left: 20upx;
		padding: 0 6upx;
		color: #f51515;
	}

	.sold-num {
		color: #969696;
		font-size: 24upx;
		margin-right: 40upx;
	}

	/* 功能栏 */
	.function-bar {
		flex-direction: row;
		flex-wrap: wrap;
		padding-top: 20upx;
		background-color: #FFFFFF;
	}

	.function-item {
		width: 149upx;
		height: 150upx;
		flex-direction: column;
		align-items: center;
		color: #757575;
		margin-bottom: 10upx;
	}

	.func-img {
		width: 80upx;
		height: 80upx;
	}

	.desc {
		font-size: 24upx;
		margin-top: 20upx;
		color: #464646;
	}


	/* 每一个块级标题的样式 */
	.block {
		width: 750upx;
		background-color: #fff;
		flex-direction: row;
		align-items: center;
		padding: 10upx 20upx;
		margin-bottom: 10upx;
	}

	.title {
		width: 260upx;
		padding: 10upx 10px;
		font-size: 34upx;
		color: #e74b45;
		font-weight: 500;
	}

	.save-num {
		font-size: 22upx;
		margin-right: 20upx;
	}


	/* 顶部标题栏 */
	.page-header {
		background-color: #e1251b;
	}

	.page-header-wrapper {

		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		height: 100px;
		padding: 0px 20px;
	}

	.shop-content {
		padding: 10upx;
		flex: 1;
	}

	.page-header-left {
		opacity: 0.9;
	}

	.jdtitle {
		width: 148upx;
		height: 48upx;
	}


	.page-header-center {
		flex: 1;
		padding: 0px 30px 0 20px;
		flex-direction: row;
		height: 60px;
		align-items: center;
		color: #fff;
		background-color: rgba(255, 255, 255, .2);
		border-radius: 100px;
	}

	.fangda {
		font-size: 35upx;
		color: #FFFFFF;
		margin-right: 10upx;
	}

	.search-input {
		font-size: 28px;
		color: #fff;

	}

	.xiaoxi {
		color: #FFFFFF;
		font-size: 50upx;
	}

	.page-header-right {
		width: 80px;
		align-items: center;
	}

	.tui-white {
		padding: 0 24upx;
		background-color: #FFFFFF !important;
		margin-bottom: 10upx;
	}

	.category-btn {
		color: #F43F3B;
	}

	.tui-gray {
		background-color: #fafafa;
	}

	.tui-slider-box {
		width: 750upx;
		align-items: center;
		justify-content: center;
	}

	.tui-slider {
		width: 690upx;
		height: 300upx;
		border-radius: 12upx;
		overflow: hidden;
	}

	.tui-img-radius {
		border-radius: 12upx;
	}

	.tui-frame {
		width: 690upx;
		height: 300upx;
		background-color: #fff;
	}

	.tui-slider-img {
		width: 690upx;
		height: 300upx;
	}

	.tui-indicator {
		width: 690px;
		height: 20px;
		item-color: rgba(255, 255, 255, 0.4);
		item-selected-color: #FFFFFF;
		item-size: 14px;
		position: absolute;
		bottom: 24px;
		left: 0;
	}

	.tui-loading {
		margin-right: 15px;
		height: 60px;
		width: 60px;
		color: #999999;
	}

	.tui-list {
		/* padding: 20upx; */
	}


	.tab-bar-item {
		height: 80px;
		width: 100px;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		font-size: 30upx;
		/* margin: 0 20upx; */
	}

	.category-btn {
		height: 80px;
		color: #f00;
		font-size: 28upx;
		width: 60upx;
		flex-direction: row;
		line-height: 80upx;
		justify-content: center;
	}

	.tab-bar-title {
		height: 80px;
		line-height: 80px;
		font-size: 32px;
		color: #999;
		font-weight: 400;
	}

	.tui-active {
		color: #FF0000;
		/* font-size: 36px; */
		font-weight: bold;
		border-bottom-width: 6px;
		border-style: solid;
		border-color: #FF0000;
		/* 	width: 80px; */
		text-align: center;
	}

	.tui-loadmore {
		height: 100px;
		width: 750px;
		flex-direction: column;
		justify-content: center;
		position: relative;
		align-items: center;
	}

	.loadmore-text {
		font-size: 26px;
		text-align: center;
		color: #999999;
		padding-left: 6px;
		padding-right: 6px;
	}

	.loadmore-line {
		border-bottom-width: 1px;
		border-bottom-style: solid;
		border-bottom-color: #e5e5e5;
		width: 320px;
		position: absolute;
		z-index: -1;
	}

	.tui-refresh {
		width: 750px;
		height: 80px;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.refresh-text {
		text-align: center;
		font-size: 26px;
		color: #999999;
	}

	.ios-arrow {
		color: #999999;
		font-size: 42px;
		font-weight: 300;
		padding-right: 20px;
		margin-left: -75px;
	}
</style>
