<template>
	<div class="content">
		<!-- 顶部选项卡 -->
		<tabs @change="changeTab" :index="tabIndex">
			<tab-bar class="tui-white">
				<div v-for="(tabBar,index) in tabBars" :key="index" class="tab-bar-item" :ref="tabBar.val+index">
					<text class="tab-bar-title" :class="[tabIndex==index ? 'tui-active' : '']">{{tabBar.desc}}</text>
				</div>
			</tab-bar>
			<tab-content>
				<div v-for="(tab,index1) in tabBars" :key="index1" class="slider-item">
					<list class="tui-list" @loadmore="loadMore(index1)" loadmoreoffset="5" @scroll="recylerScroll">
						<!-- 刷新组件 -->
						<refresh class="tui-refresh" @refresh="onrefresh" @pullingdown="onpullingdown" :display="tab.refreshing? 'show' : 'hide'">
							<loading-indicator class="tui-loading"></loading-indicator>
							<text :class="[iosRefresh?'ios-arrow':'']" v-if="isIos">{{arrow}}</text>
							<text class="refresh-text">{{tab.refreshText}}</text>
						</refresh>
						<cell>
							<div :ref="'totop'+index1"></div>
						</cell>
						<cell v-for="(item,index) in  tab.orderList" :key="index" v-if="index1==0">
							<!-- 荔枝爆款 -->
							<div class="content-item">
								<div class="content-item-left">
									<image src="../../static/login/heard.png" mode="widthFix" class="head-img"></image>
								</div>
								<div class="content-item-right">
									<div class="right-header">
										<div class="right-title">
											<text class="right-title-desc">荔枝生活</text>
											<text class="right-title-date">{{formatTime(item.show_time,'M/D h:m')}}</text>
										</div>
										<text @click="shareShop(handleChange(item.copy_content),item.itemid,item.itempic)" class="flicon shareicon">&#xe646; {{item.dummy_click_statistics}}</text>
									</div>

									<richtext @click="navtoshop(item.itemid)" @longpress="copyText(handleChange(item.copy_content))" class="right-desc">{{handleChange(item.copy_content)}}</richtext>

									<div class="right-content" :class="[item.itempic.length!=4?'right-content-t':'']">
										<image @click="navtoPreview(item.itempic,indexs)" :key="indexs" v-for="(items,indexs) in item.itempic" :src="items+'_300x300.jpg'"
										 mode="center" class="right-img"></image>
									</div>
									<div class="right-copy">
										<text class="right-copy-wenzi">{{item.tkl}}</text>
										<div class="copydiv">
											<text @click="copycomment(handleChangeC(item.copy_comment),item.itemid,item)" class="copyicon flicon">&#xe705; 复制评论</text>
										</div>
									</div>
								</div>
							</div>
						</cell>
						<!-- 好货专场 -->
						<cell v-for="(item,index) in  tab.orderList" :key="index" v-if="index1==1">
							<div class="content-item">
								<div class="content-item-left">
									<image src="../../static/login/heard.png" mode="aspectFill" class="head-img"></image>
								</div>
								<div class="content-item-right">
									<div class="right-header">
										<div class="right-title">
											<text class="right-title-desc">荔枝生活</text>
											<text class="right-title-date">{{formatTime(item.activity_start_time,'M/D h:m')}}</text>
										</div>
										<text @click="shareShop(handleChange(item.copy_text),item.itemid,item.itempic)" class="flicon shareicon">&#xe646; {{item.share_times}}</text>
									</div>

									<richtext @longpress="copyText(handleChange(item.copy_text))" class="right-desc">{{handleChange(item.copy_text)}}</richtext>

									<div class="right-content" :class="[item.item_data.length!=4?'right-content-t':'']">
										<div @click="navtoshop(items.itemid,indexs)" :key="indexs" v-for="(items,indexs) in item.item_data" class="right-img">
											<image v-if="indexs!=4" :src="items.itempic+'_310x310.jpg'" mode="aspectFit" class="right-img">
											</image>
											<image v-else :src="items.itempic" mode="aspectFit" class="right-img">
											</image>
											<text v-if="indexs!=4" class="img-price">￥{{items.itemprice}}</text>
										</div>


									</div>
								</div>
							</div>
						</cell>
						<!-- 加载组件 -->
						<cell class="tui-loadmore">
							<text class="loadmore-line" v-if="!tab.loadingType"></text>
							<text class="loadmore-text tui-gray">{{tab.loadingText}}</text>
						</cell>
					</list>
					<div class="fixedItem" @click="scrollToTop" v-if="tab.topShow">
						<text class="flicon totop">&#xe6fe;</text>
					</div>
				</div>
			</tab-content>
		</tabs>
	</div>
</template>

<script>
	import tabContent from '@/components/tabNvue/tabContent.nvue'
	import tabBar from '@/components/tabNvue/tabBar.nvue'
	import tabs from '@/components/tabNvue/tabs.nvue'
	import share from '@/common/share.js'
	const dom = weex.requireModule('dom')
	const clipborad = weex.requireModule('clipboard');

	export default {
		data() {
			return {
				num: 0,
				relativePathArr: [], //分享完成后删除下载的本地图片
				pictures: [], //分享的图片数据数组
				picNum: 0, //本地图片已经添加到上面数组中的数量，包括下载成功或者失败的
				picLength: 0, //后台请求获取的图片数组长度
				imgNum: 0,
				isshow: false,
				qrcodeImg: "",
				isAuth: true,
				//商品类目列表
				tabBars: [{
						desc: "荔枝爆款",
						loaded: false,
						orderList: [],
						pageNo: 1,
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						refreshing: false,
						refreshText: "",
					},
					{
						desc: "好货专场",
						loaded: false,
						orderList: [],
						pageNo: 1,
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						refreshing: false,
						refreshText: "",
					},
					{
						desc: "商学院",
						loaded: false,
						orderList: [],
						pageNo: 1,
						loadingType: true, //是否还有数据
						loadingText: "正在加载...", //上拉加载文字提示
						refreshing: false,
						refreshText: "",
					},
				],
				tabIndex: 0, //tab当前选中得索引	
				pagesize: 12,
				tklHtml: '淘口令'
			};
		},
		components: {
			tabContent,
			tabBar,
			tabs
		},
		beforeCreate() {
			const domModule = weex.requireModule('dom')
		},
		methods: {
			recylerScroll: function(e) {
				console.log(1)
				if (e.contentOffset.y < -200) {
					this.$set(this.tabBars[this.tabIndex], 'topShow', true)
				} else {
					this.$set(this.tabBars[this.tabIndex], 'topShow', false)
				}
			},
			scrollToTop: function() {
				const el = this.$refs['totop' + this.tabIndex][0]
				console.log(el)
				dom.scrollToElement(el, {
					offset: -126
				})
			},
			//分享底栏
			shareInfo(piclist) {

				let picList = JSON.parse(JSON.stringify(piclist))
				picList.push(this.qrcodeImg)
				let _that = this;
				// console.log(this.qrcodeImg)
				let shareInfo = {
					imgUrl: this.qrcodeImg
				};
				let shareList = [{
						icon: "/static/sharemenu/wx.png",
						text: "微信好友",
					},
					{
						icon: "/static/sharemenu/pyq.png",
						text: "朋友圈"
					},
					{
						icon: "/static/sharemenu/qq.png",
						text: "QQ"
					},
					{
						icon: "/static/sharemenu/xz.png",
						text: "下载图片"
					},
					{
						icon: "/static/sharemenu/more.png",
						text: "更多"
					},
				];
				this.shareObj = share(shareInfo, shareList, function(index) {
					console.log("点击按钮的序号: " + index);
					let shareObj = {
						type: 2,
						success: (res) => {
							console.log("success:" + JSON.stringify(res));
						},
						fail: (err) => {
							console.log("fail:" + JSON.stringify(err));
						}
					};
					switch (index) {
						case 0:
							shareObj.provider = "weixin";
							shareObj.scene = "WXSceneSession";
							shareObj.type = 2;
							shareObj.imageUrl = _that.qrcodeImg;
							uni.share(shareObj);
							break;
						case 1:
							shareObj.provider = "weixin";
							shareObj.scene = "WXSenceTimeline";
							shareObj.type = 2;
							shareObj.href = "http://www.baidu.com"
							shareObj.imageUrl = _that.qrcodeImg;
							uni.share(shareObj);
							break;
						case 2:
							uni.showLoading({
								mask: true,
								title: '正在发起分享'
							})
							shareObj.provider = "qq";
							shareObj.type = 2;

							var downLoader = plus.downloader.createDownload(_that.qrcodeImg, {}, function(download, status) {
								if (status == 200) {
									plus.gallery.save(download.filename, function() {
										shareObj.imageUrl = download.filename;
										uni.hideLoading()
										uni.share(shareObj);
									}, function(e) {
										uni.hideLoading()
										console.log("分享失败")
									});
								} else {
									console.log("分享失败")
								}
							})
							downLoader.start();

							break;
						case 3:
							_that.imgNum = 0;
							uni.showLoading({
								mask: true,
								title: `正在保存`
							})
							//复制图片
							_that.downloadFile(picList);
							break;
						case 4:
							uni.showLoading({
								title: "正在发起分享",
								mask: true
							})
							_that.picLength = picList.length;
							_that.picNum = 0;
							_that.relativePathArr = [];
							_that.pictures = [];
							for (var i = 0; i < picList.length; i++) {
								_that.setImg("img" + i, picList[i]);
							}
							break;
					};
				});
				this.$nextTick(() => {
					this.shareObj.alphaBg.show();
					this.shareObj.shareMenu.show();
				})
			},

			setImg(imgId, loadUrl) {
				console.log(imgId, loadUrl)
				var _that = this;
				if (imgId == null || loadUrl == null) return;
				//图片下载成功 默认保存在本地相对路径的"_downloads"文件夹里面, 如"_downloads/logo.jpg"
				var filename = loadUrl.substring(loadUrl.lastIndexOf("/") + 1, loadUrl.length) + '.jpg';
				var relativePath = "_downloads/" + filename;
				this.relativePathArr.push(relativePath); //存储起来等分享结束后删除数据使用

				//检查图片是否已存在
				plus.io.resolveLocalFileSystemURL(relativePath, function(entry) {
					console.log("存在")
					//如果文件存在,则直接设置本地图片
					_that.setImgFromLocal(imgId, relativePath);
				}, function(e) {
					console.log("下载")
					//如果文件不存在,联网下载图片
					_that.setImgFromNet(imgId, loadUrl, relativePath);
				});
			},

			/*联网下载图片,并设置给<img>*/
			setImgFromNet(imgId, loadUrl, relativePath) {
				var _that = this;
				//先设置下载中的默认图片
				//创建下载任务
				var dtask = plus.downloader.createDownload(loadUrl, {}, function(d, status) {
					if (status == 200) {
						_that.setImgFromLocal(imgId, d.filename);
					} else {
						_that.picNum++;
						//	                		console.log("下载失败");
						//下载失败,需删除本地临时文件,否则下次进来时会检查到图片已存在
						//dtask.abort();//文档描述:取消下载,删除临时文件;(但经测试临时文件没有删除,故使用delFile()方法删除);
						if (relativePath != null)
							_that.delFile(relativePath);
					}
				});
				//启动下载任务
				dtask.start();
			},

			/*给图片标签<img>设置本地图片
			 * imgId 图片标签<img>的id
			 * relativePath 本地相对路径 例如:"_downloads/logo.jpg"
			 */
			setImgFromLocal(imgId, relativePath) {
				var _that = this;
				//本地相对路径("_downloads/logo.jpg")转成SD卡绝对路径("/storage/emulated/0/Android/data/io.dcloud.HBuilder/.HBuilder/downloads/logo.jpg");
				var sd_path = plus.io.convertLocalFileSystemURL(relativePath);
				this.pictures.push("file://" + sd_path);
				this.picNum++;
				console.log(this.picLength, this.picNum)
				//这里要注意picNu ++的地方，要在图片下载完成后或者失败后；
				if (this.picLength == this.picNum) {
					console.log("开始分享")
					//确定全部图片都下载到本地后调分享
					var msg = {
						pictures: this.pictures
					};
					console.log(msg)
					plus.share.sendWithSystem(msg, function(e) {
						uni.hideLoading()
					}, function(e) {
						uni.hideLoading()
					});
				}
			},
			// 下载  
			downloadFile(urlList) {
				// console.log(urlList)
				var _that = this;
				if (this.imgNum >= urlList.length) {
					plus.downloader.clear();
					uni.hideLoading()
					uni.showToast({
						title: "已保存",
						icon: "none"
					})
					return
				}
				var data = (new Date()).valueOf();
				console.log(data)
				var downLoader = plus.downloader.createDownload(urlList[this.imgNum], {
					filename: `_downloads/${this.imgNum+1}/${data}.jpg`
				}, function(download, status) {
					_that.imgNum++;
					if (status == 200) {
						// console.log(_that.imgNum, urlList.length)
						// download.filename='_doc/download/a.doc'
						plus.gallery.save(download.filename, function() {
							console.log(download.filename)
							console.log("成功")
							_that.downloadFile(urlList)

						}, function(e) {
							urlList.length--;
							_that.downloadFile(urlList)
							console.log("失败")
						});
					} else {
						urlList.length--;
					}
				})
				downLoader.start();
			},

			//分享功能
			shareShop(str, itemid, picList) {
				//没登陆
				if (!uni.getStorageSync("lzd-user").token) {
					uni.navigateTo({
						url: '/pages/user/login',
					});
					return
				}

				// 检测是否授权
				if (!(uni.getStorageSync("relation_id"))) {
					uni.showToast({
						icon: "none",
						title: "请您先去个人中心授权"
					})
					return
				}

				uni.showLoading({
					title: "正在生成图片",
					mask: true
				})
				//获取二维码图
				uni.request({
					url: `http://39.100.111.131:8888/qrCode?item_id=${itemid}&relation_id=${(uni.getStorageSync("relation_id"))}`,
					success: (res) => {
						console.log(res)
						let {
							code,
							data
						} = res.data;
						if (code == 200) {
							this.qrcodeImg = data.pic_url;
							//把二维码图片加入列表中
							this.shareInfo(picList);
						}
					},
					fail: () => {
						uni.showToast({
							icon: 'none',
							title: "荔枝开小差了，请联系客服"
						})
					},
					complete: () => {
						uni.hideLoading()
						//复制导语
						uni.setClipboardData({
							data: str,
							success: () => {
								uni.showToast({
									title: "已帮你自动复制分享文案",
									icon: 'none'
								})
							}
						})
					}
				})
			},
			//正则转换
			handleChange(data) {
				// console.log(data)
				return data.replace(/(&lt;br&gt;)/g, '\n')
			},
			//正则转换评论
			handleChangeC(data) {

				if (data.indexOf('&lt;br&gt;') != -1) {
					console.log(2)
					return data.replace(/(&lt;br&gt;)/g, '')
				} else {
					return data
				}
			},

			//是否登录权限检测
			isLogin() {
				//没登陆
				if (!uni.getStorageSync("lzd-user").token) {
					uni.navigateTo({
						url: '/pages/user/login',
					});
					return false
				}
			},
			//跳转商品详情
			navtoshop(id, index) {
				if (index == 4) {
					return
				}
				uni.navigateTo({
					url: "/pages/index/shopdetails?id=" + id
				})
			},
			//时间日期格式化
			formatTime(number, format) {
				//数据转化  
				var formateArr = ['M', 'D', 'h', 'm'];
				var returnArr = [];
				var date = new Date(number * 1000);
				returnArr.push(this.formatNumber(date.getMonth() + 1));
				returnArr.push(this.formatNumber(date.getDate()));
				returnArr.push(this.formatNumber(date.getHours()));
				returnArr.push(this.formatNumber(date.getMinutes()));
				for (var i in returnArr) {
					format = format.replace(formateArr[i], returnArr[i]);
				}
				return format;
			},
			formatNumber(n) {
				n = n.toString()
				return n[1] ? n : '0' + n
			},

			//复制评论
			copycomment(data, id, item) {
				var data = '复製这条(淘口令),进入【Tao宝】即可下单'
				//没登陆
				if (!uni.getStorageSync("lzd-user").token) {
					uni.navigateTo({
						url: '/pages/user/login',
					});
					return
				}
				// 检测是否授权
				if (!(uni.getStorageSync("relation_id"))) {
					uni.showToast({
						icon: "none",
						title: "请您先去授权"
					})
					return
				}
				uni.showLoading({
					title: "正在复制评论",
					mask: true
				})
				//转链
				uni.request({
					url: `http://39.100.111.131:8080/relation_tkl?item_id=${id}&relation_id=${uni.getStorageSync("relation_id")}`,
					//请求成功
					success: (res) => {
						console.log(res)
						let {
							code,
							result
						} = res.data;
						if (code == 200) {
							var str = data.replace(/淘口令/g, result.data.tpwd)

							item.tkl = `复製这条(${result.data.tpwd}),进入【Tao宝】即可下单`
							console.log(str, result.data.tpwd)
							uni.setClipboardData({
								data: str,
								success: () => {
									uni.showToast({
										title: "复制成功",
										icon: "none"
									})
								}
							})
						}

					},
					fail: () => {
						uni.showToast({
							title: "复制失败",
							icon: "none"
						})
					},
					complete: () => {
						uni.hideLoading()
					}
				})

			},
			//跳转到预览图片
			navtoPreview(url, index) {
				uni.setStorageSync('previelist', {
					imglist: url,
					current: index
				})
				uni.navigateTo({
					url: '/pages/circle/previewimg',
				});
			},
			//预览图片,有缺陷，仅仅只能保存当前所选择得图片，
			preview(url, index) {
				this.isshow = true;
				plus.nativeUI.previewImage(url, {
					indicator: "number",
					current: index,
					onLongPress: function(u) { // 预览界面长按显示ActionSheet
						console.log('onLongPress: ' + JSON.stringify(u));
						var bts = [{
							title: "保存相册"
						}];
						plus.nativeUI.actionSheet({
								cancel: "取消",
								buttons: bts
							},
							function(e) {
								//选择了相册
								if (e.index > 0) {
									if (u.url.indexOf('.jpg') == -1) {
										console.log(u.url)
										var downLoader = plus.downloader.createDownload(u.url, {}, function(download, status) {
											if (status == 200) {
												plus.gallery.save(download.filename, function(event) {

													//对安卓读取不到的图片处理
													// if(download.filename.substring(download.filename.lastIndexOf('\/').indexOf('.')) {
													// 	
													// }
													plus.nativeUI.toast('保存成功');
												}, function(e) {
													plus.nativeUI.toast('保存失败');
												});
											}
										})
										downLoader.start();
										return
									}

									plus.gallery.save(url[index], function() {
										plus.nativeUI.toast('保存成功');
									}, function() {
										plus.nativeUI.toast('保存失败');
									});
								}

							}
						);
					}
				});
			},
			//长按复制
			copyText(data) {

				clipborad.setString(data);
				var modal = weex.requireModule('modal')
				modal.toast({
					message: '复制成功',
					duration: 0.3
				})
			},
			//加载数据
			loadData(source) {
				let navItem = this.tabBars[this.tabIndex]
				//刷新
				if (source == "refresh") {
					navItem.loadingType = true;
					navItem.loaded = false;
					navItem.pageNo = 1;
				}
				//检测是否还有更多数据
				if (!navItem.loadingType) {
					return;
				}
				//防止相同类型下重复加载
				if (source == 'tabChange' && navItem.loaded == true) {
					return;
				}
				var url;
				if (this.tabIndex == 0) {
					url = `http://39.100.111.131:8080/selected_item/min_id/${navItem.pageNo}`
				} else if(this.tabIndex == 1) {
					url = `http://39.100.111.131:8080/subject_hot/min_id/${navItem.pageNo}`
				}else{
					navItem.loadingType = false;
					navItem.loadingText = '没有更多了';
					return
				}
				console.log(url)
				uni.request({
					url,
					success: res => {
						let {
							data,
							code,
							min_id
						} = res.data;
						navItem.loaded = true;

						if (code == 1) {
							data.forEach(v => {
								v.tkl = '复製这条(淘口令),进入【Tao宝】即可下单'
							})
							//请求成功对应序号加一
							navItem.pageNo = min_id;
							let shopList = data;
							if (source == "refresh") {
								navItem.refreshing = false;
								navItem.orderList = []
							}
							navItem.orderList = navItem.orderList.concat(shopList);

						} else {
							//请求失败无更多数据
							navItem.loadingType = false;
							navItem.loadingText = '没有更多了';
						}
					},
					fail: () => {
						uni.showToast({
							icon: "none",
							title: "请求超时"
						})
					},
					complete: () => {
						navItem.refreshing = false;
					}
				})

			},
			//上拉加载更多
			loadMore(e) {
				console.log("触发")
				//获取当前类目的刷新状态
				var currentTab = this.tabBars[this.tabIndex];
				if (!currentTab.loadingType) {
					currentTab.loadingText = '没有更多了';
					return
				}
				currentTab.loadingText = "正在加载...";
				this.loadData();
			},
			//轮播图滚动
			changeTab(e) {
				this.tabIndex = e.index;
				//如果是第一页的话就请求数据
				if (this.tabBars[this.tabIndex].pageNo === 1) {
					this.loadData("tabChange");
				}
			},
			//手指离开，下拉刷新触发修改状态
			onrefresh(event) {
				//获取当前类目的刷新状态
				var currentTab = this.tabBars[this.tabIndex];
				this.iosRefresh = false;
				currentTab.arrow = "↑";
				currentTab.refreshText = "正在刷新...";
				currentTab.refreshing = true;
				this.loadData("refresh");
				// this.pullrefresh(this.tabIndex, true)
			},
			//手指接触屏幕开始，下拉触发
			onpullingdown(event) {
				//获取当前类目的刷新状态
				var currentTab = this.tabBars[this.tabIndex];

				//如果为刷新中则不准再次触发刷新
				if (currentTab.refreshing) {
					return;
				}
				this.iosRefresh = this.isIos
				if (Math.abs(event.pullingDistance) > Math.abs(event.viewHeight)) {
					this.arrow = "↑";
					currentTab.refreshText = "释放立即刷新";
				} else {
					this.arrow = "↓";
					currentTab.refreshText = "下拉可以刷新";
				}
			}
		},
		//进入页面请求数据
		created() {
			this.loadData();
		},
	}
</script>

<style>
	.totop {
		font-size: 36upx;
		color: #e74b45;

	}

	.slider-item {
		position: absolute;
		top: 0;
		bottom: 0;
		width: 750upx;
	}

	.fixedItem {
		width: 66rpx;
		height: 66rpx;
		background-color: #FFFFFF;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		border-radius: 50%;
		position: absolute;
		bottom: 30upx;
		right: 30upx;
		z-index: 999999;
		box-shadow: 0 0 20px #ccc;
	}

	.flicon {
		font-family: nflicon;
	}

	.content {
		background-color: #f8f8f8;
	}

	.tui-list {
		background-color: #f8f8f8;
		flex: 1;
	}

	.tui-white {
		background-color: #FFFFFF !important;
		/* margin-bottom: 5upx; */
		flex-direction: row;
		justify-content: space-between;
	}

	.tab-bar-item {
		height: 80px;
		width: 250upx;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}

	.tab-bar-title {
		height: 80px;
		line-height: 80px;
		font-size: 32px;
		color: #999;
		font-weight: 400;
	}

	.tui-active {
		color: #f56d53;
		border-bottom-width: 4px;
		border-style: solid;
		border-color: #f56d53;
		text-align: center;
	}

	.tui-loadmore {
		height: 100px;
		width: 750px;
		flex-direction: column;
		justify-content: center;
		position: relative;
		align-items: center;
	}

	.loadmore-text {
		font-size: 26px;
		text-align: center;
		color: #999999;
		padding-left: 6px;
		padding-right: 6px;
	}

	.loadmore-line {
		border-bottom-width: 1px;
		border-bottom-style: solid;
		border-bottom-color: #e5e5e5;
		width: 320px;
		position: absolute;
		z-index: -1;
	}

	.tui-refresh {
		width: 750px;
		height: 80px;
		flex-direction: row;
		align-items: center;
		justify-content: center;
	}

	.refresh-text {
		text-align: center;
		font-size: 26px;
		color: #999999;
	}

	.ios-arrow {
		color: #999999;
		font-size: 42px;
		font-weight: 300;
		padding-right: 20px;
		margin-left: -75px;
	}


	/* 商品 */
	.content-item {
		width: 750upx;
		background-color: #FFFFFF;
		flex-direction: row;
		margin-bottom: 20upx;
		padding: 30upx 10upx;
	}

	.content-item-left {
		width: 80upx;
		height: 66upx;
	}

	.head-img {
		width: 80upx;
		height: 66upx;
	}

	.content-item-right {
		width: 650upx;
		margin-left: 10upx;
	}

	.right-header {
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 20upx;
	}

	.right-title {
		flex-direction: column;
	}

	.right-title-desc {
		font-size: 36upx;
		margin-bottom: 10upx;
		color: #f56d53;
	}

	.right-title-date {
		font-size: 24upx;
		color: #848484;
	}

	.shareicon {
		font-size: 26upx;
		padding: 10upx 20upx;
		border-width: 1upx;
		border-style: solid;
		border-color: #F5B8B8;
		margin-right: 40upx;
		color: #f56d53;
		border-radius: 36upx;
	}

	.imgpre {
		position: absolute;
		bottom: 0;
		top: 0;
		background-color: #000;
		z-index: 999999999;
	}

	.imgpre-content {
		margin-top: 200upx;
		width: 750upx;
		height: 750upx;
	}

	.right-desc {
		color: #545454;
		font-size: 30upx;
		line-height: 50upx;
	}

	.right-content {
		flex-direction: row;
		flex-wrap: wrap;
		width: 420upx;
		margin: 16upx 0;
		/* margin: 10upx 0; */
	}

	.right-content-t {
		width: 630upx;
	}

	.right-img {
		width: 200upx;
		height: 200upx;
		margin: 2upx;
		position: relative;
	}

	.img-price {
		position: absolute;
		color: #FFFFFF;
		font-size: 20upx;
		background-image: linear-gradient(to right, #ff8af7, #cd79c7);
		padding: 2upx 8upx;
		border-top-left-radius: 30upx;
		border-bottom-left-radius: 30upx;
		right: 0;
		bottom: 0;
	}

	.right-copy {
		padding: 5upx;
		margin-right: 10upx;
		background-color: #f5f5f5;
		/* line-height: 40upx; */
		/* flex-direction: column; */
	}

	.right-copy-wenzi {
		color: #989898;
		font-size: 28upx;
	}

	.copydiv {
		flex-direction: row;
		justify-content: flex-end;
		padding: 10upx;
	}

	.copyicon {
		padding: 10upx 10upx;
		background-color: #fbdfdf;
		font-size: 22upx;
		border-radius: 40upx;
		color: #E74B45;
	}
</style>
